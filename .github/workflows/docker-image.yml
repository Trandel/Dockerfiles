name: Docker Image CI

on:
  push:
    branches: [ master ]
  schedule:
    - cron: '30 2 * * *'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build and push
      run: |
        DOCKER_REPO=webdevops-wordpress
        TOKEN=$( curl -sSLd "username=${{secrets.DOCKER_HUB_USERNAME}}&password=${{secrets.DOCKER_HUB_PASSWORD}}" https://hub.docker.com/v2/users/login | jq -r '.token' )
        NEW_TAG=$( curl -fsSL 'http://api.wordpress.org/core/version-check/1.7/' | jq -r '.offers[0].current' )
        SHA1=$( curl -fsSL "https://wordpress.org/wordpress-${NEW_TAG}.tar.gz.sha1" )
        CURRENT_TAG=$( curl -sH "Authorization: JWT ${TOKEN}" "https://hub.docker.com/v2/repositories/${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}/tags/${NEW_TAG}/" | jq -r '.name' )
        echo "new tag: ${NEW_TAG}, current tag: ${CURRENT_TAG}"
        if [ $NEW_TAG = $CURRENT_TAG ]; then
          echo "Nothing new to build";
        else
          echo "Login to dockerhub";
          docker login -u $${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}};
          echo "Start building new image";
          cd ${DOCKER_REPO};
          travis_retry docker build --build-arg WORDPRESS_VERSION="${NEW_TAG}" --build-arg WORDPRESS_SHA1="${SHA1}" -t "${DOCKER_REPO}" . ;
          echo "Push new image with tags";
          docker tag ${DOCKER_REPO} "${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}:latest";
          docker push "${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}:latest";
          docker tag "${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}:latest" "${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}:${NEW_TAG}";
          docker push "${{secrets.DOCKER_HUB_USERNAME}}/${DOCKER_REPO}:${NEW_TAG}";
        fi
